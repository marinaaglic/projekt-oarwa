{"version":3,"sources":["components/Serija.js","services/serije.js","App.js","index.js"],"names":["Serija","serija","promjenaPN","oznaka","pogledano","naziv","onClick","osnovniURL","axios","get","then","response","data","noviObjekt","post","id","put","App","props","useState","serije","postaviSerije","unosSerije","postaviUnos","ispisiSve","postaviIspis","useEffect","console","log","serijeServer","pocSerije","serijeZaIspis","filter","map","s","find","novaSerija","promjenaGlednosti","onSubmit","e","preventDefault","target","Math","random","concat","value","onChange","type","ReactDOM","render","document","getElementById"],"mappings":"qMAaeA,EAXA,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,WACfC,EAASF,EAAOG,UACpB,UAAY,cAChB,OACE,+BAAKH,EAAOI,MACR,yBAAQC,QAASJ,EAAjB,UAA8BC,EAA9B,W,gBCLFI,EAAa,UAmBJ,EAjBI,WAEf,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAe9B,EAZA,SAAAC,GACX,OAAOL,IAAMM,KAAKP,EAAWM,IAWlB,EARC,SAACE,EAAIF,GACjB,OAAOL,IAAMQ,IAAN,UAAaT,EAAb,YAA2BQ,GAAMF,IC+E7BI,EAvFH,SAACC,GAAW,IAAD,EACcC,mBAAS,IADvB,mBACXC,EADW,KACHC,EADG,OAEeF,mBAAS,qBAFxB,mBAEZG,EAFY,KAEAC,EAFA,OAGgBJ,oBAAS,GAHzB,mBAGZK,EAHY,KAGDC,EAHC,KAKnBC,qBAAU,WACNC,QAAQC,IAAI,eACZC,IAECnB,MAAK,SAAAoB,GACFH,QAAQC,IAAI,uBACZP,EAAcS,QAEpB,IAEF,IAAMC,EAAgBP,EACpBJ,EACAA,EAAOY,QAAO,SAAA/B,GAAM,OAAyB,IAArBA,EAAOG,aA8CjC,OACI,gCACE,wCACA,8BACI,yBAAQE,QAAS,kBAAMmB,GAAeD,IAAtC,0BACcA,EAAY,YAAc,YAG5C,6BACGO,EAAcE,KAAI,SAAAC,GAAC,OAClB,cAAC,EAAD,CACAjC,OAAQiC,EACRhC,WAAa,kBAnCG,SAACa,GACvB,IAAMd,EAASmB,EAAOe,MAAK,SAAAD,GAAC,OAAIA,EAAEnB,KAAOA,KACnCqB,EAAU,2BACTnC,GADS,IAEZG,WAAYH,EAAOG,YAEvByB,EACSd,EAAGqB,GACX1B,MAAK,SAACC,GACHgB,QAAQC,IAAIjB,GACZU,EAAcD,EAAOa,KAAI,SAAAC,GAAC,OAAIA,EAAEnB,KAAOA,EAAKmB,EAAIvB,EAASC,YAyBpCyB,CAAkBH,EAAEnB,MAF1BmB,EAAEnB,SAKnB,uBAAMuB,SA3DO,SAACC,GAChBA,EAAEC,iBACFb,QAAQC,IAAI,OAAQW,EAAEE,QACtB,IAAM5B,EAAa,CACfR,MAAOiB,EACPlB,UAAWsC,KAAKC,SAAW,IAE/Bd,EACQhB,GACPH,MAAK,SAACC,GACHgB,QAAQC,IAAIjB,GACZU,EAAcD,EAAOwB,OAAOjC,EAASC,OACrCW,EAAY,QA+Cd,UACE,uBAAOsB,MAAOvB,EAAYwB,SA5CZ,SAACP,GACnBZ,QAAQC,IAAIW,EAAEE,OAAOI,OACrBtB,EAAYgB,EAAEE,OAAOI,UA2CjB,wBAAQE,KAAK,SAAb,0B,MCjFZC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.7ce58721.chunk.js","sourcesContent":["import React from 'react'\n \nconst Serija = ({serija, promjenaPN}) => {\n    const oznaka = serija.pogledano\n    ? 'Watched' : 'Not watched'\n  return (\n    <li>{serija.naziv}\n        <button onClick={promjenaPN}>{oznaka} </button>\n    </li>\n    \n  )\n}\n \nexport default Serija;","import axios from 'axios'\n\nconst osnovniURL = '/serije'\n\nconst dohvatiSve = () =>{\n    const promise = axios.get(osnovniURL);\n    return promise.then(response => response.data)\n}\n\nconst stvori = noviObjekt => {\n    return axios.post(osnovniURL,noviObjekt)\n}\n\nconst osvjezi = (id, noviObjekt) => {\n    return axios.put(`${osnovniURL}/${id}`, noviObjekt)\n}\n\nconst brisi = id => {\n    return axios.delete(`${osnovniURL}/${id}`)\n}\n\nexport default {dohvatiSve, stvori, osvjezi, brisi}","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport Serija from '../src/components/Serija';\nimport Footer from '../src/components/Footer';\nimport serijeServer from '../src/services/serije'\n\nconst App = (props) => {\n    const [ serije, postaviSerije] = useState([])\n    const [unosSerije, postaviUnos] = useState(\"Unesite seriju...\")\n    const [ispisiSve, postaviIspis ] = useState(true)\n\n    useEffect(() =>{\n        console.log(\"Effect hood\");\n        serijeServer\n        .dohvatiSve()\n        .then(pocSerije => {\n            console.log(\"Serije su prikazane\");\n            postaviSerije(pocSerije)\n        })\n    },[])\n\n    const serijeZaIspis = ispisiSve\n    ? serije \n    : serije.filter(serija => serija.pogledano === true)\n\n    const novaSerija = (e) => {\n        e.preventDefault()\n        console.log(\"Klik\", e.target);\n        const noviObjekt = {\n            naziv: unosSerije,\n            pogledano: Math.random() > 0.5\n        }\n        serijeServer\n        .stvori(noviObjekt)\n        .then((response)=> {\n            console.log(response)\n            postaviSerije(serije.concat(response.data))\n            postaviUnos('')\n        })\n    }\n\n    const promjenaUnosa = (e) => {\n        console.log(e.target.value);\n        postaviUnos(e.target.value);\n    }\n\n    const promjenaGlednosti = (id) => {\n        const serija = serije.find(s => s.id === id)\n        const novaSerija = {\n            ...serija,\n            pogledano: !serija.pogledano\n        }\n        serijeServer\n        .osvjezi(id,novaSerija)\n        .then((response) => {\n            console.log(response);\n            postaviSerije(serije.map(s => s.id !== id ? s : response.data))\n        })\n    }\n\n    const brisiSeriju = (id) => {\n        serijeServer\n        .brisi (id)\n        .then (response => {\n            console.log(response);\n            postaviSerije(serije.filter(s => s.id !== id))\n        })\n    }\n    \n    return (\n        <div>\n          <h1>Serije</h1>\n          <div> \n              <button onClick={() => postaviIspis (!ispisiSve)}>\n                  Prika≈æi { ispisiSve ? \"pogledane\" : \"sve \"}\n              </button>\n          </div>\n          <ul>\n            {serijeZaIspis.map(s =>\n              <Serija key={s.id} \n              serija={s} \n              promjenaPN= {() => promjenaGlednosti(s.id)}/>\n            )}        \n          </ul>\n          <form onSubmit={novaSerija}>\n            <input value={unosSerije} onChange={promjenaUnosa}/>\n            <button type='submit'>Dodaj</button>\n          </form>\n        </div>\n      )\n  }\n    \n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from '../src/App';\nimport '../src/index.css'\n\t\nReactDOM.render(<App />,document.getElementById('root'))\n"],"sourceRoot":""}